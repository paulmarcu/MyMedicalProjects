<?xml version="1.0" encoding="UTF-8"?>

<beans:beans
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd"
	xmlns="http://www.springframework.org/schema/security" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans">

	<beans:import resource="classpath:/jpaContext.xml" />
	<http auto-config="true">
			<intercept-url access="IS_AUTHENTICATED_ANONYMOUSLY"
			pattern="/login.html" />

		<intercept-url access="IS_AUTHENTICATED_ANONYMOUSLY"
			pattern="/loginFailed.html" />

		<intercept-url access="IS_AUTHENTICATED_ANONYMOUSLY"
			pattern="/logout.html" />
		 <intercept-url access="ROLE_ADMIN,ROLE_USER" pattern="/**" />
		 <form-login authentication-failure-url="/loginFailed.html"
			login-page="/login.html" />
		<logout logout-url="/logout.html" />
	</http>

	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource" 
			 authorities-by-username-query="SELECT  users.username, role.name 
				FROM users INNER JOIN role ON role.id = users.role_id WHERE users.username = 
				?" users-by-username-query="SELECT users.username, users.password, users.enabled
				FROM users WHERE users.username = ?"
				 /> 
				
		</authentication-provider>
	</authentication-manager>

</beans:beans>